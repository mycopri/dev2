<?php
function ci_fb_menu() {
	$items['ci-fb/js/check-email'] = array(
    'title' => t('Check for F'),
    'description' => t('Check for Facebook email'),
    'page callback' => 'ci_fb_js_check_email',
    'access callback' => TRUE,
  );
	$items['ci-fb/activate'] = array(
    'title' => t('Activate Login with Facebook'),
    'description' => t('Links a users facebook account to the CI account'),
    'page callback' => 'ci_fb_activate',
    'access callback' => 'user_is_logged_in',
  );
	$items['ci-fb/register'] = array(
    'title' => t('Register with Login with Facebook'),
    'description' => t('Create an account using Facebook info'),
    'page callback' => 'ci_fb_register',
    'access callback' => 'user_is_anonymous',
  );
	return $items;
}

/**
 * Menu callback.
 * this function is called when the user clicks on the Login w/FB
 * button. It checks to see if the users FB email already exists
 * in the drupal database. If it does, it creates an entry in the
 * {authmap} table using user_set_authmaps and it also creates an
 * entry in {ci_fb} to store the users FB ID.
 */
function ci_fb_js_check_email() {
	if($account = user_get_authmaps('facebook:' . $_GET['email'])) {
		ci_fb_authenticate('facebook:' . $_GET['email']);
		$mail->found = true;
		return drupal_json($mail);
	}
	else {
		$sql = "SELECT mail FROM {users} WHERE mail = '%s'";
		if($data->email = db_result(db_query($sql, $_GET['email']))) {
			// An email was found in the {users} table and so we go ahead 
			// and link the facebook account to it
			$data->found = TRUE;
			$account = user_load(array('mail' => $data->email));
			$authmaps = array('authname_ci_fb' => 'facebook:' . $data->email);		
			user_set_authmaps($account, $authmaps);
			// Store the facebook user object_id
			db_query("UPDATE {ci_fb} SET fb_object_id = %d WHERE uid = %d", $_GET['id'], $account->uid);
	    if (!db_affected_rows()) {
	      @db_query("INSERT INTO {ci_fb} (uid, fb_object_id) VALUES (%d, %d)", $account->uid, $_GET['id']);
	    }
			// Now we authenticate the user and log in
			ci_fb_authenticate('facebook:' . $data->email);
			// Return some data, but right now the data is not used in any way			
			return drupal_json($data);
		}
		else {
			// An email was not found so we need to ask the user
			$mail->email = $_GET['email'];
			$mail->found = FALSE;
			return drupal_json($mail);
		}
	}
}

function ci_fb_authenticate($authname) {
  $account = user_external_load($authname);
  if (isset($account->uid)) {
    if (!variable_get('user_email_verification', TRUE) || $account->login) {
      user_external_login($account, $_SESSION['openid']['user_login_values']);
    }
    else {
      drupal_set_message(t('You must validate your email address for this account before logging in via OpenID'));
    }
  }
}

/*
 * Implementation of hook_form_alter : adds OpenID login to the login forms.
 */
function ci_fb_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'user_login_block' || $form_id == 'user_login') {
  	$form['fb_links'] = !isset($form['fb_links']) ? array() : $form['fb_links'];
  	$items = array(theme('ci_fb'));
    $link = array(
      '#value' => theme('item_list', $items),
      '#weight' => 1,
    );
		$form['fb_links'][] = $link;
  }
  return $form;
}

/**
 * Implementation of hook_block().
 */
function ci_fb_block($op = 'list', $delta = 0, $edit = array()) {
  global $user;
	
  if ($op == 'list') {
    $blocks[0]['info'] = t('Facebook login');
    // Not worth caching.
    return $blocks;
  }
  else if ($op == 'view') {
    $block = array();

    switch ($delta) {
      case 0:
        // For usability's sake, avoid showing two login forms on one page.
        if ((!$user->uid && !(arg(0) == 'user' && !is_numeric(arg(1)))) || user_access('administer nodes')) {

          $block['subject'] = t('Facebook login');
          $block['content'] = 'Nothing';//ci_fb_login_block();
        }
        return $block;
    }
  }
}

function ci_fb_activate() {
	global $user;
	$fb_email = $_GET['email'];
	$account = $user;
	$authmaps = array('authname_ci_fb' => 'facebook:' . $fb_email);		
	user_set_authmaps($account, $authmaps);
	// Store the facebook user object_id
	db_query("UPDATE {ci_fb} SET fb_object_id = %d WHERE uid = %d", $_GET['id'], $account->uid);
  if (!db_affected_rows()) {
    @db_query("INSERT INTO {ci_fb} (uid, fb_object_id) VALUES (%d, %d)", $account->uid, $_GET['id']);
  }
	drupal_set_message('You can now login directly with the Login with Facebook button');
	drupal_goto();
}

function ci_fb_register() {
	if (variable_get('user_register', 1)) {
	  // Register new user
	  $form_state['redirect'] = NULL;
	  $form_state['values']['name'] = $_GET['email'];
	  $form_state['values']['mail'] = $_GET['email'];
	  $form_state['values']['pass']  = user_password();
	  $form_state['values']['status'] = variable_get('user_register', 1) == 1;
		$form_state['values']['status'] = variable_get('user_register', 1) == 1;
	  if (empty($form_state['values']['name']) && empty($form_state['values']['mail'])) {
	    drupal_set_message(t('Please complete the registration by filling out the form below. If you already have an account, you can <a href="@login">log in</a> now and add your OpenID under "My account".', array('@login' => url('user/login'))), 'warning');
	    $success = FALSE;
	  }
	  else {
	    $form = drupal_retrieve_form('user_register', $form_state);
	    drupal_prepare_form('user_register', $form, $form_state);
	    drupal_validate_form('user_register', $form, $form_state);
	    $success = !form_get_errors();
	    if (!$success) {
	      drupal_set_message(t('Account registration using the information provided by your OpenID provider failed due to the reasons listed below. Please complete the registration by filling out the form below. If you already have an account, you can <a href="@login">log in</a> now and add your OpenID under "My account".', array('@login' => url('user/login'))), 'warning');
	      // Append form validation errors below the above warning.
	      $messages = drupal_get_messages('error');
	      foreach ($messages['error'] as $message) {
	        drupal_set_message( $message, 'error');
	      }
	    }
	  }
	  if (!$success) {
	    // We were unable to register a valid new user, redirect to standard
	    // user/register and prefill with the values we received.
	    $_SESSION['openid']['values'] = $form_state['values'];
	    // We'll want to redirect back to the same place.
	    $destination = drupal_get_destination();
	    unset($_REQUEST['destination']);
	    drupal_goto('user/register', $destination);
	  }
	  else {
	    $account = user_save('', $form_state['values']);
	    // Terminate if an error occured during user_save().
	    if (!$account) {
	      drupal_set_message(t("Error saving user account."), 'error');
	      drupal_goto();
	    }
	    user_external_login($account);
	  }
		drupal_set_message('Welcome! Thanks a new account was created your Facebook information. Next time you can login with the Lofin with Facebook button.');
	  drupal_goto();
	}
	else {
	  drupal_set_message(t('Only site administrators can create new user accounts.'), 'error');
	}
}

function ci_fb_login_block() {
	$o = theme('ci_fb');
	//$o .= theme('ci_fb_have_email_dialog');
	return $o;
}

function ci_fb_theme() {
	return array(
    'ci_fb' => array(
			'arguments' => array(),
			'template' => 'ci-fb',
		),
    'ci_fb_have_email_dialog' => array(
			'arguments' => array(),
			'template' => 'ci-fb-have-email-dialog',
		),
	);
}

function ci_fb_preprocess(&$vars) {
	global $base_url;
	//drupal_add_js(drupal_get_path('module', 'ci_fb') . '/js/jquery-1.4.js', 'core');
	//drupal_add_js(drupal_get_path('module', 'ci_fb') . '/js/jquery-ui-1.8.18.custom.min.js', 'core');
	drupal_add_css(drupal_get_path('module', 'ci_fb') . '/js/trontastic/jquery-ui-1.8.custom.css');
	jquery_ui_add(array('ui.dialog'));
	$path = drupal_get_path('module', 'ci_fb') . '/js/jquery.form.js';
	drupal_add_js($path, 'module');
	if ($base_url === "http://lc.ci-asce.org") {
		$vars['fb_app_id'] = '101177090014175';	
	}
	else if ($base_url === "http://ci-asce.org") {
		$vars['fb_app_id'] = '314400791923359';
	}
}

function ci_fb_preprocess_ci_fb_have_email_dialog(&$vars) {
	
}


