<?php
// $Id: domain_adv.module,v 1.5 2010/11/22 04:38:22 gordon Exp $
/**
 * @file
 * Implement hooks to change the domain module not to use node access to
 * filter nodes but to use db_rewrite_sql() directly which should make
 * integration with other node access module much easier.
 */

/**
 * Implemenation of hook_menu_alter().
 */
function domain_adv_menu_alter(&$callbacks) {
  foreach (array('node/%node', 'node/%node/edit', 'node/%node/delete') as $path) {
    $callbacks[$path]['access callback'] = 'domain_adv_node_access';
  }
}

/**
 * Implementation of hook_db_rewrite_sql().
 */
function domain_adv_db_rewrite_sql($query, $primary_table, $primary_field, $args) {
  if (domain_grant_all()) {
    return;
  }
  
  switch ($primary_field) {
    case 'nid':
      $return = array();
      $return['join'] = 'LEFT JOIN {domain_access} da ON '. $primary_table .'.nid = da.nid';
      $return['where'] = '(da.realm = "domain_id" AND da.gid = '. $GLOBALS['_domain']['domain_id'] .')';
      if ($GLOBALS['_domain']['domain_id']) {
        $return['where'].= ' OR (da.realm = "domain_site" AND da.gid = 0)';
      }
      return $return;
      break;
  }
}

/**
 * Implementation of hook_domainrecords().
 */
function domain_adv_domainrecords(&$grants, $node) {
  _domain_store_grants($node->nid, $grants);
  $grants = array();
}

/**
 * Implementation of hook_domaingrants().
 */
function domain_adv_domaingrants(&$grants, $node, $op) {
  $grants = array();
}

/**
 * Implement wrapper function for domain access to check that the node is
 * available in the current domain
 */
function domain_adv_node_access($op, $node) {
  if (!empty($node->domains)) {
    $domain_id = $GLOBALS['_domain']['domain_id'];
    if ($domain_id == 0) $domain_id = -1;
    if (!isset($node->domains[$domain_id]) && !$node->domain_site) {
      return FALSE;
    }
  }
  return node_access($op, $node);
}

