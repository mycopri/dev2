<?php
/*
 * Implementation of hook_help.
 */
function og_book_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description':
      return t('Organic group books.');
      break;
    case 'admin/modules#name':
      return 'og_book';
      break;
    case 'admin/help#modulename':
      return t("The Organic group Book module restricts the outline to books within your groups.");
      break;
    default: return null;
  }
}

function og_book_form_alter(&$form, &$form_state, &$form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] .'_node_form' == $form_id) {
    if(!user_access('edit any book structre')){

      $node = $form['#node'];
      global $user;
  
      $subs = og_get_subscriptions($user->uid);
  
      $result = db_query("SELECT b.nid AS bid, oga.group_nid AS gnid from {book} b LEFT JOIN {og_ancestry} oga ON b.nid = oga.nid");
      while($row = db_fetch_array($result)) {
      if($row['gnid'] != NULL) {
          if(!$subs[$row['gnid']]) {
            unset($form['book']['bid']['#options'][$row['bid']]);
          } 
        }
      }
  
      $nid = isset($node->nid) ? $node->nid : 'new';  
      if (!user_access('create new books') && user_access('create personal books')  && ($nid == 'new' || ($nid != $node->book['original_bid']))) {
        $form['book']['bid']['#options'] = array($nid  => '<'. t('create new book') .'>') + $form['book']['bid']['#options'];
      }
    }
  }
}
~      
