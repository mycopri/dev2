<?php
// $Id$

/**
 * Implements hook_perm().
 */
function ci_perm() {
  return array(
    'administer ci settings',
  );
}

/**
 * Implements hook_menu().
 */
function ci_menu() {
	$items['admin/settings/ci'] = array(
    'title'            => 'CI Settings',
    'description'      => 'Configure CI settings.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ci_admin_settings'),
    'file'             => 'ci.admin.inc',
    'access arguments' => array('administer ci settings'),
    'type'             => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/ci/default'] = array(
    'title'            => 'My CI Block',
    'description'      => 'Configure My CI block settings.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ci_admin_settings'),
    'file'             => 'ci.admin.inc',
    'access arguments' => array('administer ci settings'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => -10,
  );
  $items['user/%user/photo'] = array(
    'title' => 'Your Photo',
    'page callback' => 'ci_user_photo',
    'page arguments' => array(1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file' => 'ci.pages.inc',
  );
  $items['admin/settings/ci/clean_system'] = array(
    'title'            => 'Clean System',
    'description'      => 'Clean system table',
    'page callback'    => 'ci_clean_system_table',
    'file'             => 'ci.admin.inc',
    'access arguments' => array('administer ci settings'),
    'type'             => MENU_CALLBACK,
  );		
	return $items;
}

/**
 * Implementation of hook_form_alter().
 */
function ci_form_alter(&$form, &$form_state, $form_id) {
	//dpm($form);
}       

/**
 * Implementation of hook_theme().
 */	
function ci_theme() {
	return array(
    'ci_picture' => array(
      'arguments' => array('account' => NULL),
      'template' => 'ci-picture',
    ),
    'ci_links' => array(
      'arguments' => array('links' => array()),
    ),
  );  
}

/**
 * Implementation of hook_block().
 */
function ci_block($op = 'list', $delta = 0, $edit = array()) {
  global $user;

  if ($op == 'list') {
    $blocks[0]['info'] = t('My CI');
    // Not worth caching.
    $blocks[0]['cache'] = BLOCK_NO_CACHE;

    return $blocks;
  }
  else if ($op == 'configure' && $delta == 0) {

  }
  else if ($op == 'save' && $delta == 0) {

  }
  else if ($op == 'view') {
    $block = array();
    switch ($delta) {
      case 0:
        if (drupal_is_front_page() && user_is_logged_in()) {
          $block['subject'] = t('My CI');
          $block['content'] = ci_block_my_ci();
        }
        return $block;
    }
  }
}

/**
 * Display the My CI block
 */
function ci_block_my_ci() {
	global $user;
	$account = user_load($user->uid);
	drupal_add_css(drupal_get_path('module', 'ci') . '/ci.css', 'module');
	$o .= theme('ci_picture', $account);
	$o .= '<div style="clear: both"></div>';
	$o .= theme('ci_links');	
	return $o;
}

/**
 * Return a set of blocks available for the current user.
 *
 * @param $links
 *   an array of links
 * @return
 *   A list of links
 */
function theme_ci_links($links = array()) {
	$output = '<h2 class="pane-title ci-front-block-title">Things you can do</h2>';
	$output .= '<p>Below are links to some of the various interactive things you can do ' .
		'on the site. Right now, there isn\'t a whole lot of things, but this will change ' .
		'as activity on the site increases.</p>';
	$links = module_invoke_all('ci_links');
	if ($links) {
		//$output .= implode('<br/>', $links);
		$list = theme('item_list', $links);
		$output .= '<div class="ci-links">' . $list . '</div>';
	}
	else {
		$output = '';
	}
	return $output;
}

/**
 * Process variables for ci-student-days-user.tpl.php.
 *
 * The $variables array contains the following arguments:
 * - $account
 *
 * @see ci-student-days-user.tpl.php
 */
function template_preprocess_ci_picture(&$variables) {
  $variables['picture'] = '';
  if (variable_get('user_pictures', 0)) {
    $account = $variables['account'];
    if (!empty($account->picture) && file_exists($account->picture)) {
      $picture = file_create_url($account->picture);
			$alt = 'Update photo';
      $variables['picture'] = theme('image', $picture, $alt, $alt, '', FALSE);
			$attributes = array('attributes' => array('title' => t('Update photo.')), 'html' => TRUE);
      $variables['picture'] = l($variables['picture'], "user/$account->uid/photo", $attributes);
    }
    else {
    	$attributes = array('attributes' => array('title' => t('Please provide a photo.')), 'html' => TRUE);
      $variables['picture'] = l('Please provide a photo', "user/$account->uid/photo", $attributes);
    }
  }
	
	$variables['first_name'] = t($account->profile_first_name);
	$variables['last_name'] = t($account->profile_last_name);
	$variables['email'] = t($account->mail);
	$variables['full_name'] = t($account->profile_first_name . ' ' . $account->profile_last_name);
}


