<<<<<<< HEAD
<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function ci_content_install() {
  // Notify the user of the existence of the suggested menu item.
  $t = get_t();
  drupal_set_message($t('New CI specific features have been installed. You may want to check new permissions at 
  <a href="@permissions-url">permissions</a> and menu items <a href="@navigation-menu-url">Image galleries menu item</a>.',
  array('@navigation-menu-url' => url('admin/build/menu-customize/navigation'), '@permissions-url' => url('admin/user/permissions'))));
}

/**
 * Implementation of hook_enable().
 */
function ci_content_enable() {
	db_query("UPDATE {system} SET weight = 1001 WHERE name = 'ci_content'");
  if ($vocabulary = taxonomy_vocabulary_load(variable_get('ci_content_vocabulary', 0))) {
    // Existing install. Add back image node type, if the image
    // vocabulary still exists. Keep all other node types intact there.
    $vocabulary = (array) $vocabulary;
    taxonomy_save_vocabulary($vocabulary);
  }
  else {
    // Create the image gallery vocabulary if it does not exist.
    $vocabulary = array(
      'name' => t('CI Content Vocabulary'),
      'multiple' => 0,
      'required' => 0,
      'hierarchy' => 1,
      'relations' => 0,
      'module' => 'ci_content',
    );
    taxonomy_save_vocabulary($vocabulary);

    variable_set('ci_content_vocabulary', $vocabulary['vid']);
  }
  $sql = "SELECT * FROM node_type WHERE type = 'ci_content'";
  $result = db_query($sql);
  $type = db_fetch_object($result);
  if ($type) {
  	$type->custom = 0;
		$type->module = 'ci_content';
		$type->orig_type = 'ci_content';
		$type->locked = 1;
  	drupal_write_record('node_type', $type, array('type'));
  }
}

/**
 * Implementation of hook_uninstall().
 */
function ci_content_uninstall() {
  if ($vid = variable_get('ci_content_vocabulary', FALSE)) {
    module_invoke('taxonomy', 'del_vocabulary', $vid);
  }
}
=======
<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function ci_content_install() {
  // Notify the user of the existence of the suggested menu item.
  $t = get_t();
  drupal_set_message($t('New CI specific features have been installed. You may want to check new permissions at 
  <a href="@permissions-url">permissions</a> and menu items <a href="@navigation-menu-url">Image galleries menu item</a>.',
  array('@navigation-menu-url' => url('admin/build/menu-customize/navigation'), '@permissions-url' => url('admin/user/permissions'))));
}

/**
 * Implementation of hook_enable().
 */
function ci_content_enable() {
	db_query("UPDATE {system} SET weight = 1001 WHERE name = 'ci_content'");
  if ($vocabulary = taxonomy_vocabulary_load(variable_get('ci_content_vocabulary', 0))) {
    // Existing install. Add back image node type, if the image
    // vocabulary still exists. Keep all other node types intact there.
    $vocabulary = (array) $vocabulary;
    taxonomy_save_vocabulary($vocabulary);
  }
  else {
    // Create the image gallery vocabulary if it does not exist.
    $vocabulary = array(
      'name' => t('CI Content Vocabulary'),
      'multiple' => 0,
      'required' => 0,
      'hierarchy' => 1,
      'relations' => 0,
      'module' => 'ci_content',
    );
    taxonomy_save_vocabulary($vocabulary);

    variable_set('ci_content_vocabulary', $vocabulary['vid']);
  }
  $sql = "SELECT * FROM node_type WHERE type = 'ci_content'";
  $result = db_query($sql);
  $type = db_fetch_object($result);
  if ($type) {
  	$type->custom = 0;
		$type->module = 'ci_content';
		$type->orig_type = 'ci_content';
		$type->locked = 1;
  	drupal_write_record('node_type', $type, array('type'));
  }
}

/**
 * Implementation of hook_uninstall().
 */
function ci_content_uninstall() {
  if ($vid = variable_get('ci_content_vocabulary', FALSE)) {
    module_invoke('taxonomy', 'del_vocabulary', $vid);
  }
}
>>>>>>> origin/master
