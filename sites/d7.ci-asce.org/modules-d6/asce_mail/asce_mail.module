<?php
// $Id$
/**
 *  Basic asce mail form that is intended to be used in other modules.
 */
function asce_mail_form(&$form_state, $mid = NULL) {
  module_load_include('inc', 'messaging', 'messaging.admin');
  $form['message'] = array('#tree' => TRUE);
	if(module_exists('domain')) {
  	global $_domain, $user;
  	$site_mail = domain_conf_variable_get($_domain['domain_id'], 'site_mail');
	}
  if ($mid) {
  	$sql = "SELECT * FROM {asce_mail_store} WHERE mid = %d";
  	$results = db_query($sql, $mid);
  	$mail = db_fetch_object($results);
  	$form_state['storage']['message'] = $mail;
  }
  $form['message']['sender'] = array(
    '#title' => t('Sender of email'),
    '#type' => 'radios',
    '#options' => array(
      $site_mail => t('Site (' . $site_mail . ')'),
      $user->mail => t('You (' . $user->mail . ')'),
    ),
    '#default_value' => $site_mail,        
  );
  
  $form['message']['subject'] = array(
    '#title' => t('Subject'),
    '#type' => 'textfield',
    '#default_value' => $mail->subject ? $mail->subject : 'Sample',
    '#size' => 60,        
  );
  
  $form['message']['body'] = array(
    '#title' => 'Body',
    '#type' => 'textarea',
    '#default_value' => $mail->body ? $mail->body : 'Sample', 
    '#rows' => 5,        
  );
  //$form['message']['format'] = filter_form(2, 1);
  
  // Tokens for text replacement
  if ($tokens = token_get_list('asce_mail')) {
    $headers = array(t('Token'), t('Replacement value'));
    $rows = array();
    foreach ($tokens['asce_mail'] as $token => $token_description) {
        $row = array();
        $row[] = '[' . $token . ']';
        $row[] = $token_description;
        $rows[] = $row;
    }
    $form['tokens'] = array(
      '#title' => t('Available tokens'),
      '#type' => 'fieldset',
      '#description' => t('These special strings will be replaced by their real value at run time.'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#weight' =>-15,
    );
    $form['tokens']['list'] = array(
      '#value' => theme('table', $headers, $rows, array('class' => 'description'))
    );
  }
  return $form;
}

function asce_mail_form_validate($form, &$form_state) {
 // Here we do some validation since we will save this message in the database
 drupal_set_message('You have set this email to be sent from: ' . $form_state['values']['message']['sender']); 
}

function asce_mail_form_submit($form, &$form_state) {
  $message = $form_state['values']['message'];
}

/*
 *  This function actually sends the message out using the messaging module.
 *  $message must have the following keys:
 *    subject, body and sender
 */
function asce_mail_send($form, &$form_state) {
    $message = $form_state['values']['message'];
    $recipients = array(102 => 'moey@asce.org');
    $result = messaging_message_send($recipients, $message, 'phpmailer');
    drupal_set_message($result ? 'The email was successfully sent.' : 'There was a problem sending the email.' );
}

/*
 * Implementation of hook_action_info()
 */ 
function asce_mail_action_info() {
	$action_info['asce_mail_send_email_action'] = array(
		'description' => t('Send e-mail - specify sender'),
	  'type' => 'user',
	  'configurable' => TRUE,
	);
	$action_info['asce_mail_send_drupal_mail_action'] = array(
	  'description' => t('Send e-mail via Drupal Mail'),
    'type' => 'user',
    'configurable' => TRUE,
	);
	return $action_info;
}

/**
 * Taken and modified from system_send_email_action_form
 */
function asce_mail_send_email_action_form($context) {
	global $user;
  $form_state = array();
  $form = asce_mail_form($form_state);
  $send_methods = messaging_method_list();
  if (user_access('administer nodes')) {
  	$form['send_method'] = array(
  	  '#title' => 'Send method',
      '#type' => 'radios',
      '#options' => $send_methods,
      '#default_value' => key($send_methods),
  	  '#weight' => -2,
  	);
  }
  return $form;
}

/**
 * Validate system_send_email_action form submissions.
 */
function asce_mail_send_email_action_validate($form, $form_state) {
  /*$form_values = $form_state['values'];
  // Validate the configuration form.
  if (!valid_email_address($form_values['recipient']) && $form_values['recipient'] != '%author') {
    // We want the literal %author placeholder to be emphasized in the error message.
    form_set_error('recipient', t('Please enter a valid email address or %author.', array('%author' => '%author')));
  }*/
	//dsm($form_state['values']);
}

/**
 * Process system_send_email_action form submissions.
 */
function asce_mail_send_email_action_submit($form, $form_state) {
  $form_values = $form_state['values'];
  // Process the HTML form to store configuration. The keyed array that
  // we return will be serialized to the database.
  $params = $form_values['message'];
  return $params;
}

/**
 * Implementation of a configurable Drupal action. Sends an email.
 */
function asce_mail_send_email_action($object, $context) {
	// Since I've declared this action as a type user, the object is 
	// automatically the user account
  $recipient = array($object->uid => $object->mail);
  $message = array(
    'type' => 'asce-mail',
    'subject' => $context['subject'],
    'body' => $context['body'],
    'new_sender' => $context['sender'],
    'params' => array(
      'mail' => array (
        'from' => $context['sender'],
      ),
    ),
  );
  $result = messaging_message_send($recipient, $message, $send_method);
  drupal_set_message($result ? 'The email was successfully sent.' : 'There was a problem sending the email.' );
}

/**
 * This alters the sender and return-path for the email
 * being sent.
 *
 * @param Object $message
 *   The message object.
 * @param Object $info
 *   Sending method information.
 */
function asce_mail_mail_alter(&$mail) {
  if ($mail['id'] == 'messaging_message-asce-mail') {
	 $mail['params'] = array(
      'from' => $mail['from'],
      'returnpath' => $mail['from'],
    );
  }
}

/*
 * This alters the message being sent. This where the token
 * module can do stuff.
 */
function asce_mail_message_alter(&$message) {
	$user = user_load(key($message->destinations));
	//dsm($user);
	$message->subject = token_replace($message->subject, 'asce_mail', $user);
	$message->body = token_replace($message->body, 'asce_mail', $user);
}

function asce_mail_token_list($type = 'all') {
  $tokens = array();

  if ($type == 'asce_mail') {
    // Current domain tokens.
    $tokens['asce_mail']['asce-first-name'] = t('The user\'s profile first name (or nickname if provided).');
    $tokens['asce_mail']['asce-last-name'] = t('The user\'s profile last name.');
  }
  return $tokens;
	
}

function asce_mail_token_values($type, $object = NULL, $options = array()) {
  $tokens = array();
  
  if ($type == 'asce_mail') {
  	$user = $object;
    $tokens['asce-first-name'] = t($user->profile_nickname ? $user->profile_nickname : $user->profile_first_name);
    $tokens['asce-last-name'] = t($user->profile_last_name);
  }
  return $tokens;
}

/**
 * Implementation of hook_views_api().
 */
function asce_mail_views_api() {
  return array(
    'api' => 2,
  );
}

function asce_mail_mail($key, &$message) {
	if ($key = 'vbo') {
		dsm($message);
		$message['body'] = $message['params']['message']['body'];
		$message['subject'] = $message['params']['message']['subject'];
	}
}

/**
 * The basic e-mail form for sending via Drupal Mail
 */
function asce_mail_send_drupal_mail_action_form($context) {

	$form['subject'] = array(
    '#title' => t('Subject'),
    '#type' => 'textfield',
    '#default_value' => $mail->subject ? $mail->subject : 'Sample',
    '#size' => 60,        
	);
	$form['body'] = array(
    '#title' => 'Body',
    '#type' => 'textarea',
    '#default_value' => $mail->body ? $mail->body : 'Sample', 
    '#rows' => 5,        
	);
	return $form;
}

function asce_mail_send_drupal_mail_action_submit($form, &$form_state) {
	$message['message']['subject'] = $form_state['values']['subject'];
	$message['message']['body'] = $form_state['values']['body'];
  return($message);
} 

function asce_mail_send_drupal_mail_action($object, $context) {
	if (module_exists('domain')) {
		global $_domain;
  	$site_mail = domain_conf_variable_get($_domain['domain_id'], 'site_mail');
	}
	$params['message'] = $context['message'];
	$language = user_preferred_language($object);
	
	$final_mail = drupal_mail('asce_mail', 'vbo', $object->mail, $language, $params, $site_mail);
	drupal_set_message(kpr($final_mail,TRUE));
}