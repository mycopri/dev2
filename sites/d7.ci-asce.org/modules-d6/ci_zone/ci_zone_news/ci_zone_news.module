<?php
// $Id$

/**
 * Implementation of hook_node_info
 */
function ci_zone_node_info() {
	return array(
    'ci_zone' => array(
      'name' => t('CI Zone News'),
      'module' => 'ci_zone',
      'description' => t('An article written specifically for the CI Zone. CI Zone News is automatically included on the CI Zone pages as appropriate.'),
      'title_label' => t('Title'),
      'body_label' => t('Body'),
      'has_body' => TRUE,
		),
	);
}

/*
 * Implementation of hook_insert()
 */
function ci_zone_insert($node) {
	
}

/*
 * Implementation of hook_update
 */
function ci_zone_update($node) {
	
}

/**
 * Implementation of hook_perm
 */
function ci_zone_perm() {
	return array('view CI Zone news', 'create CI Zone news', 'edit own CI Zone news', 
							'edit any CI Zone news', 'delete own CI Zone news', 'delete any CI Zone news');
}

/**
 * Implementation of hook_access().
 */
function ci_zone_access($op, $node, $account) {
	switch ($op) {
		case 'create':
			if (user_access('create CI Zone news', $account)) {
				return TRUE;
			}
			break;

		case 'update':
			if (user_access('edit any CI Zone news', $account) || ($account->uid == $node->uid && user_access('edit own CI Zone news', $account))) {
				return TRUE;
			}
			break;

		case 'delete':
			if (user_access('delete any CI Zone news', $account) || ($account->uid == $node->uid && user_access('delete own CI Zone news', $account))) {
				return TRUE;
			}
			break;

		case 'view':
			if (($account->uid == $node->uid || user_access('access content', $account))) {
				return TRUE;
			}
			else {
				return FALSE;
			}
			break;
	}
}

/**
 * Implementation of hook_form().
 */
function ci_zone_form(&$node, $form_state) {
	global $user;

	$admin = user_access('administer nodes') || user_access('edit any CI Zone news') || (user_access('edit own CI Zone news') && $user->uid == $node->uid);

	$type = node_get_types('type', $node);

	$form = array(
    '#cache' => TRUE,
	);

	$form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#default_value' => $node->title,
	);

	if ($type->has_body) {
		$form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
	}

	return $form;
}
